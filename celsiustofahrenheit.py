# -*- coding: utf-8 -*-
"""CelsiusToFahrenheit.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1loNJcTVi4gQ7-AFH9PzkwQmmh0tGB-iI
"""

import tensorflow as tf
import numpy as np

celsius = np.array([-40,-10,0,8,15,22,38], dtype=float)
fahrenheit = np.array([-40,14,32,46,59,72,100], dtype=float)

#capa = tf.keras.layers.Dense(units=1,input_shape=[1])
#modelo = tf.keras.Sequential([capa])
layer1 = tf.keras.layers.Dense(units=3, input_shape=[1])
layer2 = tf.keras.layers.Dense(units=3)
output = tf.keras.layers.Dense(units=1)
model = tf.keras.Sequential([layer1,layer2,output])

model.compile(
    optimizer=tf.keras.optimizers.Adam(0.1),
    loss='mean_squared_error'
)

print("Start training...")
historial = model.fit(celsius,fahrenheit,epochs=1000,verbose=False)
print("Trained model")

import matplotlib.pyplot as plt
plt.xlabel("# Epoca")
plt.ylabel("Magnitud de perdida")
plt.plot(historial.history["loss"])

print("Start prediction")
resultado = model.predict([100.0])
print("The result is " + str(resultado) + " fahrenheit!")

print("Var intern model")
#print(capa.get_weights())